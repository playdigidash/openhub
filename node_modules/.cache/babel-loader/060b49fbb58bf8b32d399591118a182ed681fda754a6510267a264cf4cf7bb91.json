{"ast":null,"code":"var _jsxFileName = \"/Users/saikireeti/meshy-image-to-3d/src/components/TaskStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getImageTo3DTask } from '../services/meshyApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskStatus({\n  taskId,\n  onTaskCompleted\n}) {\n  _s();\n  const [status, setStatus] = useState('');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const checkStatus = async () => {\n      try {\n        const result = await getImageTo3DTask(taskId);\n        setStatus(result.status);\n        if (result.status === 'completed') {\n          onTaskCompleted(result);\n        }\n      } catch (err) {\n        setError('Failed to get task status: ' + err.message);\n      }\n    };\n    const intervalId = setInterval(checkStatus, 5000); // Check every 5 seconds\n\n    return () => clearInterval(intervalId);\n  }, [taskId, onTaskCompleted]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TaskStatus\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Task Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskStatus, \"7194kJmsj5/qobr9CpiYnTURsac=\");\n_c = TaskStatus;\nexport default TaskStatus;\nvar _c;\n$RefreshReg$(_c, \"TaskStatus\");","map":{"version":3,"names":["React","useEffect","useState","getImageTo3DTask","jsxDEV","_jsxDEV","TaskStatus","taskId","onTaskCompleted","_s","status","setStatus","error","setError","checkStatus","result","err","message","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saikireeti/meshy-image-to-3d/src/components/TaskStatus.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getImageTo3DTask } from '../services/meshyApi';\n\nfunction TaskStatus({ taskId, onTaskCompleted }) {\n  const [status, setStatus] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const checkStatus = async () => {\n      try {\n        const result = await getImageTo3DTask(taskId);\n        setStatus(result.status);\n        if (result.status === 'completed') {\n          onTaskCompleted(result);\n        }\n      } catch (err) {\n        setError('Failed to get task status: ' + err.message);\n      }\n    };\n\n    const intervalId = setInterval(checkStatus, 5000); // Check every 5 seconds\n\n    return () => clearInterval(intervalId);\n  }, [taskId, onTaskCompleted]);\n\n  return (\n    <div className=\"TaskStatus\">\n      <h2>Task Status: {status}</h2>\n      {error && <p className=\"error\">{error}</p>}\n    </div>\n  );\n}\n\nexport default TaskStatus;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,gBAAgB,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,UAAUA,CAAC;EAAEC,MAAM;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMZ,gBAAgB,CAACI,MAAM,CAAC;QAC7CI,SAAS,CAACI,MAAM,CAACL,MAAM,CAAC;QACxB,IAAIK,MAAM,CAACL,MAAM,KAAK,WAAW,EAAE;UACjCF,eAAe,CAACO,MAAM,CAAC;QACzB;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZH,QAAQ,CAAC,6BAA6B,GAAGG,GAAG,CAACC,OAAO,CAAC;MACvD;IACF,CAAC;IAED,MAAMC,UAAU,GAAGC,WAAW,CAACL,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEnD,OAAO,MAAMM,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,CAACX,MAAM,EAAEC,eAAe,CAAC,CAAC;EAE7B,oBACEH,OAAA;IAAKgB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBjB,OAAA;MAAAiB,QAAA,GAAI,eAAa,EAACZ,MAAM;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC7Bd,KAAK,iBAAIP,OAAA;MAAGgB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEV;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAACjB,EAAA,CA5BQH,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AA8BnB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}