{"ast":null,"code":"var _jsxFileName = \"/Users/saikireeti/meshy-image-to-3d/src/components/TaskStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getImageTo3DTask } from '../services/meshyApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskStatus = ({\n  taskId,\n  onTaskCompleted\n}) => {\n  _s();\n  const [task, setTask] = useState(null);\n  useEffect(() => {\n    const checkTaskStatus = async () => {\n      try {\n        const taskData = await getImageTo3DTask(taskId);\n        setTask(taskData);\n        if (taskData.status === 'SUCCEEDED') {\n          onTaskCompleted(taskData);\n        } else if (taskData.status !== 'FAILED' && taskData.status !== 'EXPIRED') {\n          setTimeout(checkTaskStatus, 5000); // Check again in 5 seconds\n        }\n      } catch (error) {\n        console.error('Error checking task status:', error);\n      }\n    };\n    checkTaskStatus();\n  }, [taskId, onTaskCompleted]);\n  if (!task) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading task status...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Task Status: \", task.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Progress: \", task.progress, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), task.status === 'SUCCEEDED' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"3D Model is ready!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: task.model_urls.glb,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Download GLB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: task.model_urls.fbx,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Download FBX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: task.model_urls.usdz,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Download USDZ\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskStatus, \"HbcssAxLTHWqCRHO839ApGabvjg=\");\n_c = TaskStatus;\nexport default TaskStatus;\nvar _c;\n$RefreshReg$(_c, \"TaskStatus\");","map":{"version":3,"names":["React","useState","useEffect","getImageTo3DTask","jsxDEV","_jsxDEV","TaskStatus","taskId","onTaskCompleted","_s","task","setTask","checkTaskStatus","taskData","status","setTimeout","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","progress","href","model_urls","glb","target","rel","fbx","usdz","_c","$RefreshReg$"],"sources":["/Users/saikireeti/meshy-image-to-3d/src/components/TaskStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getImageTo3DTask } from '../services/meshyApi';\n\nconst TaskStatus = ({ taskId, onTaskCompleted }) => {\n  const [task, setTask] = useState(null);\n\n  useEffect(() => {\n    const checkTaskStatus = async () => {\n      try {\n        const taskData = await getImageTo3DTask(taskId);\n        setTask(taskData);\n        if (taskData.status === 'SUCCEEDED') {\n          onTaskCompleted(taskData);\n        } else if (taskData.status !== 'FAILED' && taskData.status !== 'EXPIRED') {\n          setTimeout(checkTaskStatus, 5000); // Check again in 5 seconds\n        }\n      } catch (error) {\n        console.error('Error checking task status:', error);\n      }\n    };\n\n    checkTaskStatus();\n  }, [taskId, onTaskCompleted]);\n\n  if (!task) {\n    return <div>Loading task status...</div>;\n  }\n\n  return (\n    <div>\n      <h3>Task Status: {task.status}</h3>\n      <p>Progress: {task.progress}%</p>\n      {task.status === 'SUCCEEDED' && (\n        <div>\n          <p>3D Model is ready!</p>\n          <a href={task.model_urls.glb} target=\"_blank\" rel=\"noopener noreferrer\">Download GLB</a>\n          <a href={task.model_urls.fbx} target=\"_blank\" rel=\"noopener noreferrer\">Download FBX</a>\n          <a href={task.model_urls.usdz} target=\"_blank\" rel=\"noopener noreferrer\">Download USDZ</a>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskStatus;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}