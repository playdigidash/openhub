{"ast":null,"code":"var _jsxFileName = \"/Users/saikireeti/meshy-image-to-3d/src/components/ImageUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createImageTo3DTask } from '../services/meshyApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUploader({\n  onTaskCreated,\n  onError\n}) {\n  _s();\n  const [imageUrl, setImageUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    console.log('Submitting image URL:', imageUrl);\n    try {\n      console.log('Calling createImageTo3DTask');\n      const result = await createImageTo3DTask(imageUrl);\n      console.log('Task created successfully:', result);\n      onTaskCreated(result.task_id);\n    } catch (err) {\n      console.error('Error in handleSubmit:', err);\n      setError('Failed to create task: ' + err.message);\n      if (onError) onError(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: imageUrl,\n      onChange: e => setImageUrl(e.target.value),\n      placeholder: \"Enter image URL\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: isLoading,\n      children: isLoading ? 'Converting...' : 'Convert to 3D'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUploader, \"2kufqsL+ayWAHeVmRXiv5Fai/5Y=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","createImageTo3DTask","jsxDEV","_jsxDEV","ImageUploader","onTaskCreated","onError","_s","imageUrl","setImageUrl","isLoading","setIsLoading","error","setError","handleSubmit","e","preventDefault","console","log","result","task_id","err","message","onSubmit","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","disabled","className","_c","$RefreshReg$"],"sources":["/Users/saikireeti/meshy-image-to-3d/src/components/ImageUploader.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { createImageTo3DTask } from '../services/meshyApi';\n\nfunction ImageUploader({ onTaskCreated, onError }) {\n  const [imageUrl, setImageUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    console.log('Submitting image URL:', imageUrl);\n\n    try {\n      console.log('Calling createImageTo3DTask');\n      const result = await createImageTo3DTask(imageUrl);\n      console.log('Task created successfully:', result);\n      onTaskCreated(result.task_id);\n    } catch (err) {\n      console.error('Error in handleSubmit:', err);\n      setError('Failed to create task: ' + err.message);\n      if (onError) onError(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={imageUrl}\n        onChange={(e) => setImageUrl(e.target.value)}\n        placeholder=\"Enter image URL\"\n        required\n      />\n      <button type=\"submit\" disabled={isLoading}>\n        {isLoading ? 'Converting...' : 'Convert to 3D'}\n      </button>\n      {error && <p className=\"error\">{error}</p>}\n    </form>\n  );\n}\n\nexport default ImageUploader;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,mBAAmB,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,aAAaA,CAAC;EAAEC,aAAa;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBL,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACdI,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEV,QAAQ,CAAC;IAE9C,IAAI;MACFS,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1C,MAAMC,MAAM,GAAG,MAAMlB,mBAAmB,CAACO,QAAQ,CAAC;MAClDS,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEC,MAAM,CAAC;MACjDd,aAAa,CAACc,MAAM,CAACC,OAAO,CAAC;IAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZJ,OAAO,CAACL,KAAK,CAAC,wBAAwB,EAAES,GAAG,CAAC;MAC5CR,QAAQ,CAAC,yBAAyB,GAAGQ,GAAG,CAACC,OAAO,CAAC;MACjD,IAAIhB,OAAO,EAAEA,OAAO,CAACe,GAAG,CAAC;IAC3B,CAAC,SAAS;MACRV,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACER,OAAA;IAAMoB,QAAQ,EAAET,YAAa;IAAAU,QAAA,gBAC3BrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAElB,QAAS;MAChBmB,QAAQ,EAAGZ,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;MAC7CG,WAAW,EAAC,iBAAiB;MAC7BC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF/B,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAACU,QAAQ,EAAEzB,SAAU;MAAAc,QAAA,EACvCd,SAAS,GAAG,eAAe,GAAG;IAAe;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,EACRtB,KAAK,iBAAIT,OAAA;MAAGiC,SAAS,EAAC,OAAO;MAAAZ,QAAA,EAAEZ;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX;AAAC3B,EAAA,CAxCQH,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AA0CtB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}