{"ast":null,"code":"var _jsxFileName = \"/Users/saikireeti/meshy-image-to-3d/src/components/ImageUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createImageTo3DTask } from '../services/meshyApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUploader({\n  onTaskCreated\n}) {\n  _s();\n  const [imageUrl, setImageUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    try {\n      const result = await createImageTo3DTask(imageUrl);\n      onTaskCreated(result.task_id);\n    } catch (err) {\n      setError('Failed to create task: ' + err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ImageUploader\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: imageUrl,\n        onChange: e => setImageUrl(e.target.value),\n        placeholder: \"Enter image URL\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? 'Creating...' : 'Create 3D Model'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUploader, \"2kufqsL+ayWAHeVmRXiv5Fai/5Y=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","createImageTo3DTask","jsxDEV","_jsxDEV","ImageUploader","onTaskCreated","_s","imageUrl","setImageUrl","isLoading","setIsLoading","error","setError","handleSubmit","e","preventDefault","result","task_id","err","message","className","children","onSubmit","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["/Users/saikireeti/meshy-image-to-3d/src/components/ImageUploader.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { createImageTo3DTask } from '../services/meshyApi';\n\nfunction ImageUploader({ onTaskCreated }) {\n  const [imageUrl, setImageUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const result = await createImageTo3DTask(imageUrl);\n      onTaskCreated(result.task_id);\n    } catch (err) {\n      setError('Failed to create task: ' + err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"ImageUploader\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={imageUrl}\n          onChange={(e) => setImageUrl(e.target.value)}\n          placeholder=\"Enter image URL\"\n          required\n        />\n        <button type=\"submit\" disabled={isLoading}>\n          {isLoading ? 'Creating...' : 'Create 3D Model'}\n        </button>\n      </form>\n      {error && <p className=\"error\">{error}</p>}\n    </div>\n  );\n}\n\nexport default ImageUploader;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,mBAAmB,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,aAAaA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBL,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMI,MAAM,GAAG,MAAMf,mBAAmB,CAACM,QAAQ,CAAC;MAClDF,aAAa,CAACW,MAAM,CAACC,OAAO,CAAC;IAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZN,QAAQ,CAAC,yBAAyB,GAAGM,GAAG,CAACC,OAAO,CAAC;IACnD,CAAC,SAAS;MACRT,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEP,OAAA;IAAKiB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BlB,OAAA;MAAMmB,QAAQ,EAAET,YAAa;MAAAQ,QAAA,gBAC3BlB,OAAA;QACEoB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEjB,QAAS;QAChBkB,QAAQ,EAAGX,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;QAC7CG,WAAW,EAAC,iBAAiB;QAC7BC,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF7B,OAAA;QAAQoB,IAAI,EAAC,QAAQ;QAACU,QAAQ,EAAExB,SAAU;QAAAY,QAAA,EACvCZ,SAAS,GAAG,aAAa,GAAG;MAAiB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACNrB,KAAK,iBAAIR,OAAA;MAAGiB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEV;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAAC1B,EAAA,CArCQF,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AAuCtB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}