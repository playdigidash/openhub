{"ast":null,"code":"var _jsxFileName = \"/Users/saikireeti/meshy-image-to-3d/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ImageUploader from './components/ImageUploader';\nimport TaskStatus from './components/TaskStatus';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ErrorBoundary({\n  children\n}) {\n  _s();\n  const [hasError, setHasError] = useState(false);\n  const componentDidCatch = (error, errorInfo) => {\n    console.error(\"Error caught in ErrorBoundary:\", error, errorInfo);\n    setHasError(true);\n  };\n  if (hasError) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Something went wrong. Please try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: React.Children.map(children, child => /*#__PURE__*/React.cloneElement(child, {\n      onError: componentDidCatch\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(ErrorBoundary, \"0lWSx5YqYPOl7PiOJe/TIAtHv6A=\");\n_c = ErrorBoundary;\nfunction App() {\n  _s2();\n  const [taskId, setTaskId] = useState(null);\n  const [taskResult, setTaskResult] = useState(null);\n  const handleTaskCreated = newTaskId => {\n    console.log('New task created:', newTaskId);\n    setTaskId(newTaskId);\n  };\n  const handleTaskCompleted = result => {\n    console.log('Task completed:', result);\n    setTaskResult(result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Meshy Image to 3D Converter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload an image to create a 3D model using Meshy's API.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        children: [/*#__PURE__*/_jsxDEV(ImageUploader, {\n          onTaskCreated: handleTaskCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), taskId && /*#__PURE__*/_jsxDEV(TaskStatus, {\n          taskId: taskId,\n          onTaskCompleted: handleTaskCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 22\n        }, this), taskResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"3D Model Created!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Download URL: \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: taskResult.download_url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"Download 3D Model\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"FtNX0lxmU3Tnraake6tCPUNs8sI=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ErrorBoundary\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","ImageUploader","TaskStatus","jsxDEV","_jsxDEV","ErrorBoundary","children","_s","hasError","setHasError","componentDidCatch","error","errorInfo","console","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","Children","map","child","cloneElement","onError","_c","App","_s2","taskId","setTaskId","taskResult","setTaskResult","handleTaskCreated","newTaskId","log","handleTaskCompleted","result","className","onTaskCreated","onTaskCompleted","href","download_url","target","rel","_c2","$RefreshReg$"],"sources":["/Users/saikireeti/meshy-image-to-3d/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ImageUploader from './components/ImageUploader';\nimport TaskStatus from './components/TaskStatus';\nimport './App.css';\n\nfunction ErrorBoundary({ children }) {\n  const [hasError, setHasError] = useState(false);\n\n  const componentDidCatch = (error, errorInfo) => {\n    console.error(\"Error caught in ErrorBoundary:\", error, errorInfo);\n    setHasError(true);\n  };\n\n  if (hasError) {\n    return <h2>Something went wrong. Please try again later.</h2>;\n  }\n\n  return (\n    <React.Fragment>\n      {React.Children.map(children, child =>\n        React.cloneElement(child, { onError: componentDidCatch })\n      )}\n    </React.Fragment>\n  );\n}\n\nfunction App() {\n  const [taskId, setTaskId] = useState(null);\n  const [taskResult, setTaskResult] = useState(null);\n\n  const handleTaskCreated = (newTaskId) => {\n    console.log('New task created:', newTaskId);\n    setTaskId(newTaskId);\n  };\n\n  const handleTaskCompleted = (result) => {\n    console.log('Task completed:', result);\n    setTaskResult(result);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Meshy Image to 3D Converter</h1>\n        <p>Upload an image to create a 3D model using Meshy's API.</p>\n        <ErrorBoundary>\n          <ImageUploader onTaskCreated={handleTaskCreated} />\n          {taskId && <TaskStatus taskId={taskId} onTaskCompleted={handleTaskCompleted} />}\n          {taskResult && (\n            <div>\n              <h2>3D Model Created!</h2>\n              <p>Download URL: <a href={taskResult.download_url} target=\"_blank\" rel=\"noopener noreferrer\">Download 3D Model</a></p>\n            </div>\n          )}\n        </ErrorBoundary>\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}